{"version":3,"sources":["serviceWorker.js","components/contexts/user-context.js","components/reducers/userReducer.js","components/fbAuth/FBAuth.js","components/Home.js","components/HeaderComponents/ProfileImageComponent.js","components/Header.js","components/subComponents/qusetions.js","components/User.js","components/Ask.js","components/subComponents/profile.js","components/Requests.js","components/Queries.js","components/Question.js","components/Private.js","components/appComponent/App.js","index.js"],"names":["Boolean","window","location","hostname","match","UserContext","createContext","userReducer","state","action","type","user","localStorage","removeItem","MyFacebookButton","onClick","className","FbAuth","useContext","userContext","dispatch","src","alt","height","width","appId","scope","callback","response","userData","fbId","id","name","email","avatar","picture","data","url","token","accessToken","fetch","method","headers","body","JSON","stringify","then","json","component","Post","to","_id","askedToAvatar","askedByAvatar","askedToName","split","askedByName","Date","answeredAt","toLocaleString","hour","minute","hour12","toLocaleDateString","day","month","replace","question","likes","comments","FBFriend","friend","Home","useState","fbFriends","setFbFriends","skip","setSkip","homePosts","setHomePosts","useEffect","res","catch","e","length","map","fbfriend","key","post","ProfileImage","modal","setModal","profileLink","isOpen","overlayClassName","ariaHideApp","SearchBar","search","setSearch","searchResult","setSearchResult","clearSearch","onChange","target","value","placeholder","result","handleClear","Result","Header","Question","console","log","linkToQ","substr","dateData","createdAt","date","year","time","isPrivate","User","useParams","profile","setProfile","quest","setQuest","loadSts","setLoadSts","follow","setFollow","following","includes","Qfetch","followedBy","q","Ask","setQuestion","successMessage","setSuccessMessage","errorMessage","setErrorMessage","setTimeout","onSubmit","preventDefault","elements","QuestionAsked","askedBy","askedAs","checked","askedTo","Success","Error","htmlFor","Profile","Requests","questions","setQuestions","Queries","Comment","comment","setAction","ans","setAns","ansSubmit","setAnsSubmit","likeSubmit","setLikeSubmit","setComment","comSubmit","setComSubmit","qurl","handleDelete","likeSubmitHandler","feedback","Message","isHidden","answered","askedToId","askedById","undefined","answer","isPrivated","index","message","disabled","Private","App","useReducer","parse","getItem","setItem","Provider","path","exact","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.d3dd25f0.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createContext } from 'react'\r\n\r\nconst UserContext = createContext()\r\n\r\nexport default UserContext","const userReducer = (state, action) => {\r\n    switch(action.type){\r\n        case 'POPULATE_USER':\r\n            return action.user\r\n        case 'REMOVE_USER':\r\n            localStorage.removeItem('askbook')\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default userReducer","import React, { useContext } from 'react';\r\nimport FacebookAuth from 'react-facebook-auth';\r\nimport userContext from '../contexts/user-context'\r\n \r\nconst MyFacebookButton = ({ onClick }) => (\r\n  <button className='fbAuthButton' onClick={onClick}>\r\n    Login with facebook\r\n  </button>\r\n);\r\n\r\nconst FbAuth = () => {\r\n    const {user, dispatch} = useContext(userContext)\r\n\r\n    const authenticate = (response) => {\r\n        const userData ={\r\n            fbId: response.id,\r\n            name: response.name,\r\n            email: response.email,\r\n            avatar: response.picture.data.url,\r\n            token: response.accessToken\r\n        }\r\n\r\n        fetch('/api/auth', {\r\n            method: 'post',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(userData)\r\n        }).then((response) => response.json()).then((data) => {\r\n            dispatch({\r\n                type: 'POPULATE_USER',\r\n                user: data\r\n            })\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className='loginPage'>\r\n            <img src='/logo/askbook.png' alt='logo' height='150px' width='150px' />\r\n            <FacebookAuth\r\n            appId=\"3315552048670569\"\r\n            scope=\"email,public_profile,user_friends\"\r\n            callback={authenticate}\r\n            component={MyFacebookButton}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FbAuth;","import React, {useContext, useEffect, useState} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport userContext from './contexts/user-context'\r\n\r\nconst Home = () => {\r\n    const {user} = useContext(userContext)\r\n    const [fbFriends, setFbFriends] = useState([])\r\n    const [skip, setSkip] = useState(0)\r\n    const [homePosts, setHomePosts] = useState([])\r\n    const [modal, setModal] = useState(false)\r\n\r\n    useEffect(() => {\r\n        const qurl = '/api/fbfriends'\r\n        fetch( qurl, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({token: user.token })\r\n        }).then(res => res.json())\r\n        .then(data => {\r\n            setFbFriends(data)\r\n        }).catch(e => {})\r\n    },[])\r\n    \r\n    useEffect(() => {\r\n        let url = `/api/homeposts?skip=${skip}`\r\n        fetch( url, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({ token: user.token })\r\n        }).then(res => res.json())\r\n        .then(data => {\r\n            setHomePosts(data)\r\n        }).catch(e => {})\r\n    },[skip])\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"fbFriendText\">\r\n                <p className=\"fbFriendInnerText\">friends from facebook</p>\r\n            </div>\r\n            <div className=\"fbFriends\">\r\n               {\r\n                   fbFriends.length > 0 ? fbFriends.map(fbfriend => <FBFriend key={fbfriend.fbId} friend={fbfriend}/>) : <p className=\"noFBFriends\">Nothing to show</p>\r\n               }\r\n            </div>\r\n            <div className=\"HomePosts\">\r\n                {\r\n                    homePosts.length > 0 ? homePosts.map(post => <Post key={post._id} data={post}/>) : <p className=\"NoHomePostsText\">Follow people to see their posts</p>\r\n                }\r\n            </div>\r\n            <div className=\"paginationWrapper\">\r\n                { skip > 0 && <button className=\"paginationButton\" onClick={() => setSkip(skip-1)}>previous</button>}\r\n                {(homePosts !== null && homePosts.length === 10) && <button className=\"paginationButton\" onClick={() => setSkip(skip+1)}>Next</button>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Post = ({data}) => {\r\n    return (\r\n        <Link className=\"HomePostWrapper\" to={'/question/' + data._id}>\r\n            <div className=\"HomePostProfileWrapper\">\r\n                <img className=\"HomePostProPic\" src={data.askedToAvatar}/>\r\n                <img className=\"HomePostProPic\" src={data.askedByAvatar ? data.askedByAvatar : '/icons/anonymous.png'}/>\r\n            </div>\r\n            <div className=\"HomePostContents\">\r\n                <div className=\"homePostsQuestion\">\r\n                    <p className=\"HomePostsContentsHeader\">\r\n                        {data.askedToName.split(' ')[0]} answered {data.askedByName? data.askedByName.split(' ')[0] : 'Anonymous' } &nbsp;\r\n                        {new Date(data.answeredAt).toLocaleString('en-US', { hour: 'numeric', minute: 'numeric', hour12: true })} &nbsp;\r\n                        {new Date(data.answeredAt).toLocaleDateString('en-GB', {day: 'numeric', month: 'short'}).replace(/, /g, '-')} \r\n                    </p>\r\n                    <p>{data.question}</p>\r\n                </div>\r\n                                <div className=\"HomePostLikeComment\">\r\n                    <p className=\"HomePoststat\">{data.likes <2 ? data.likes + ' like' : data.likes + ' likes'}</p>\r\n                    <p className=\"HomePoststat\">{data.comments <2 ? data.comments + ' comment' : data.comments + ' comments'}</p>\r\n                </div>\r\n            </div>\r\n        </Link>\r\n    )\r\n}\r\n\r\nconst FBFriend = ({friend}) => {\r\n    return (\r\n        <Link className=\"FbFriendsWrapper\" to={'/user/' + friend.fbId}>\r\n            <img className=\"fbFriendsProfile\" src={friend.avatar} />\r\n            <p>{friend.name.split(' ')[0]}</p>\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default Home","import React, { useContext, useState } from 'react'\r\nimport Modal from 'react-modal'\r\nimport userContext from '../contexts/user-context'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst ProfileImage = () => {\r\n    const {user,dispatch} = useContext(userContext)\r\n    const [modal, setModal] = useState(false)\r\n    const profileLink = `/user/${user.fbId}`\r\n    return (\r\n        <div className='HeaderProfile'>\r\n            <img onClick={() => setModal(true)} className='HeaderProfileImage' alt='profile' src={user.avatar} height='35px' width='35px' />\r\n            <Modal \r\n                isOpen = {modal}\r\n                className=\"UserModal\"\r\n                overlayClassName=\"UserModalOverlay\"\r\n                ariaHideApp={false}\r\n            >\r\n                <div className='ModalMenuWrapper'>\r\n                    <Link to={profileLink} className='ModalMenuOptions StyleLink' onClick={() => setModal(false)}>\r\n                        <div className='ModalMenuIcon'>\r\n                            <img alt='profile' src='/icons/profile.png' width='20px' height='20px' />\r\n                        </div>\r\n                        <div className='ModalMenuText'>\r\n                            <p>Profile</p>\r\n                        </div>\r\n                    </Link>\r\n                    <Link to='/requests' className='ModalMenuOptions StyleLink' onClick={() => setModal(false)}>\r\n                        <div className='ModalMenuIcon'>\r\n                            <img alt='requests' src='/icons/requests.png' width='20px' height='20px' />\r\n                        </div>\r\n                        <div className='ModalMenuText'>\r\n                            <p>Requests</p>\r\n                        </div>\r\n                    </Link>\r\n                    <Link to='/queries' className='ModalMenuOptions StyleLink' onClick={() => setModal(false)}>\r\n                        <div className='ModalMenuIcon'>\r\n                            <img alt='queries' src='/icons/queries.png' width='20px' height='20px' />\r\n                        </div>\r\n                        <div className='ModalMenuText'>\r\n                            <p>Queries</p>\r\n                        </div>\r\n                    </Link>\r\n                    <Link to='/private' className='ModalMenuOptions StyleLink' onClick={() => setModal(false)}>\r\n                        <div className='ModalMenuIcon'>\r\n                            <img alt='private' src='/icons/private.png' width='20px' height='20px'/>\r\n                        </div>\r\n                        <div className='ModalMenuText'>\r\n                            <p>Private</p>\r\n                        </div>\r\n                    </Link>\r\n                    <Link className='ModalMenuOptions StyleLink' onClick={() => {\r\n                        setModal(false)\r\n                        dispatch({\r\n                            type: 'REMOVE_USER'\r\n                        })\r\n                    }}>\r\n                        <div className='ModalMenuIcon'>\r\n                            <img alt='logout' src='/icons/logout.png' height='20px' width='20px' />\r\n                        </div>\r\n                        <div className='ModalMenuText'>\r\n                            <p>Logout</p>\r\n                        </div>\r\n                    </Link>\r\n                    <div className='ModalMenuOptions' onClick={() => setModal(false)}>\r\n                        <div className='ModalMenuIcon'>\r\n                            <img alt='cancel' src='/icons/cancel.png' height='20px' width='20px' />\r\n                        </div>\r\n                        <div className='ModalMenuText'>\r\n                            <p>Cancel</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileImage","import React, { useContext, useEffect, useState } from 'react'\r\nimport userContext from './contexts/user-context'\r\nimport Modal from 'react-modal'\r\nimport { Link,Redirect } from 'react-router-dom'\r\nimport ProfileImage from './HeaderComponents/ProfileImageComponent'\r\n\r\nconst Header = () => {\r\n    const {user} = useContext(userContext)\r\n    \r\n    return (\r\n        <div className='Header'>\r\n            <div className='HeaderBranding'>\r\n                <Link to='/' className='StyleLink'><h2 className='HeaderBrandingText'>jigao</h2></Link>\r\n            </div>\r\n            <SearchBar />\r\n            <ProfileImage />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst SearchBar = () => {\r\n    const [modal, setModal] = useState(false)\r\n    const [search, setSearch] = useState('')\r\n    const [searchResult, setSearchResult] = useState([])\r\n\r\n    useEffect(() => {\r\n        if(search.length > 1){\r\n            const url = '/api/search'\r\n            fetch( url, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({ search: search })\r\n            }).then(res => res.json())\r\n            .then(data => {\r\n                setSearchResult(data)\r\n            }).catch(e => {})\r\n        }else{\r\n            setSearchResult([])\r\n        }\r\n    },[search])\r\n\r\n    const clearSearch = () => {\r\n        setModal(false)\r\n        setSearch('')\r\n    }\r\n\r\n    return (\r\n        <div className='HeaderSearch'>\r\n            <Modal \r\n                isOpen = {modal}\r\n                className=\"searchModal\"\r\n                overlayClassName=\"UserModalOverlay\"\r\n                ariaHideApp={false}\r\n            >\r\n                <div className=\"searchModalWrapper\">\r\n                    <div className=\"searchModalTool\">\r\n                        <input onChange={(e) => setSearch(e.target.value)} value={search} className=\"searchModalInput\" placeholder=\"start typing name\"/>\r\n                        <button className=\"bigButton\" onClick={() => setModal(false)}>close</button>\r\n                    </div>\r\n                    <div className=\"searchResultWrapper\">\r\n                        {\r\n                            searchResult.length > 0 && searchResult.map(result => <Result handleClear={clearSearch} key={result} data={result} />)\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n            <button onClick={() => setModal(true)} className='HeaderSearchButton'><img className=\"searchButtonIcon\" src='/icons/search.png'/></button>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Result = ({data, handleClear}) => {\r\n\r\n    return (\r\n        <Link onClick={handleClear} to={'/user/' + data.fbId} className=\"searchedProfileWrapper\">\r\n            <div className=\"searchImageContainer\">\r\n                <img className=\"searchProfileImage\" src={data.avatar} />\r\n            </div>\r\n            <div className=\"searchProfileName\">\r\n                <p>{data.name}</p>\r\n            </div>\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Question = ({data}) => {\r\n    console.log(data)\r\n    const linkToQ = '/question/' + data._id\r\n    let question = data.question\r\n    if(data.question.length > 50){\r\n        question = data.question.substr(0,50) + '...'\r\n    }else{\r\n        question = data.question\r\n    }\r\n    const dateData = new Date(data.createdAt)\r\n    const date = dateData.toLocaleDateString('en-GB', {day: 'numeric', month: 'short', year: 'numeric' }).replace(/, /g, '-')\r\n    const time = dateData.toLocaleString('en-US', { hour: 'numeric', minute: 'numeric', hour12: true })\r\n    return (\r\n        <Link className=\"QLink\" to={linkToQ}>\r\n            <div className=\"QWrapper\">\r\n                <div className=\"QAvatar\">\r\n                    <img className=\"QImage\" height=\"40px\" width=\"40px\" src={data.avatar ? data.avatar : '/icons/anonymous.png'} alt=\"asker\"/>\r\n                </div>\r\n                <div className=\"QBody\">\r\n                    <div className=\"QQuestion\">\r\n                        <p>{question}</p>\r\n                    </div>\r\n                    <div className=\"QDescription\">\r\n                        <div className=\"AskedBy\">\r\n                            <p>{data.name}</p>\r\n                        </div>\r\n                        <div className=\"isPrivate\">\r\n                            {data.isPrivate ? <p>Private</p> : <p>Public</p>}\r\n                        </div>\r\n                        <div className=\"dateTimeQ\">\r\n                            <p className=\"dateTime\">{date}</p>\r\n                            <p className=\"dateTime\">{time}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default Question","import React, { useContext, useEffect, useState } from 'react'\r\nimport { useParams, Link } from 'react-router-dom'\r\nimport userContext from './contexts/user-context'\r\nimport Question from './subComponents/qusetions'\r\n\r\nconst User = () => {\r\n    const {user} = useContext(userContext)\r\n    let { id } = useParams()\r\n    const [profile, setProfile] = useState({})\r\n    const [quest, setQuest] = useState(null)\r\n    const [skip, setSkip] = useState(0)\r\n    const [loadSts, setLoadSts] = useState('loading...')\r\n    const [follow, setFollow] = useState(0)\r\n\r\n    useEffect(() => {\r\n        const url = '/api/user/' + id\r\n        fetch( url, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({ token: user.token })\r\n        }).then(res => res.json())\r\n        .then(data => {\r\n            setProfile(data)\r\n            data.following.includes(user.fbId) ? setFollow(true) : setFollow(false)\r\n        }).catch(e => setLoadSts('No user Found!'))\r\n    }, [id,follow])\r\n\r\n    useEffect(() => {\r\n        Qfetch()\r\n    },[profile,skip])\r\n\r\n\r\n\r\n    const Qfetch = () => {\r\n        const qurl = '/api/questions/profile?skip=' + skip\r\n        fetch( qurl, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({ fbId: profile.fbId, token: user.token })\r\n        }).then(res => res.json())\r\n        .then(data => {\r\n            setQuest(data)\r\n            if(data.length>0){\r\n                setLoadSts(null)\r\n            }else{\r\n                setLoadSts('nothing to show!')\r\n            }\r\n        }).catch(e => setLoadSts('Error loading data!'))\r\n    }\r\n\r\n\r\n    const handleFollow = () => {\r\n        const qurl = '/api/follow/' + id\r\n        fetch( qurl, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({ token: user.token })\r\n        }).then(res => res.json())\r\n        .then(data => {\r\n            setFollow(follow + 1)\r\n        }).catch(e => {})\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"Profile-Desc\">\r\n                <div className=\"ProfHolder\">\r\n                    <img className=\"Pro-Desc-Img\" alt=\"User-Image\" src={profile.avatar} height=\"50px\" width=\"50px\" />\r\n                    <p>{profile.name}</p>\r\n                    {profile.fbId && <p>{profile.followedBy.length < 2 ? profile.followedBy.length + ' follower' : profile.followedBy.length + ' followers' }</p>}\r\n                </div>\r\n                <div className=\"buttonHolder\">\r\n                    {(user.fbId !== id) && <Link to={`/ask/${profile.fbId}`} className=\"ButtonImage\"><img alt=\"icon\" className=\"iconImageButton\" src=\"/icons/ask.png\"/></Link>}\r\n                    {(user.fbId !== id) && <button onClick={handleFollow} className={profile.fbId && profile.followedBy.includes(user.fbId) ? \"activeButtonImage\" : \"ButtonImage\"}><img className={profile.fbId && profile.followedBy.includes(user.fbId) ? \"iconImageButtonActive\" : \"iconImageButton\"} src=\"/icons/add.png\"/></button>}\r\n                    <Link to={`/ask/${profile.fbId}`} className=\"ButtonImage\"><img className=\"iconImageButton\" src=\"/icons/share.png\"/></Link>\r\n                </div>\r\n            </div>\r\n            <div className=\"sectionTitle\">Public questions</div>\r\n            {!loadSts && \r\n            <div>\r\n                {\r\n                    (quest !== null) && quest.map((q) => <Question key={q._id} data={q} />)\r\n                }\r\n            </div>}\r\n            {!loadSts &&\r\n            <div className=\"paginationWrapper\">\r\n                { skip > 0 && <button className=\"paginationButton\" onClick={() => setSkip(skip-1)}>previous</button>}\r\n                {(quest !== null && quest.length === 10) && <button className=\"paginationButton\" onClick={() => setSkip(skip+1)}>Next</button>}\r\n            </div>}\r\n            {loadSts &&\r\n            <div className=\"ProfileDenyMessage\">\r\n                <p>{loadSts}</p>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default User","import React, {useState, useEffect, useContext} from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport userContext from './contexts/user-context'\r\n\r\nconst Ask = () => {\r\n    \r\n    const {user, dispatch} = useContext(userContext)\r\n    let {id} = useParams()\r\n    const [profile, setProfile] = useState({})\r\n    const [Question, setQuestion] = useState('')\r\n    const [successMessage, setSuccessMessage] = useState('')\r\n    const [errorMessage, setErrorMessage] = useState('')\r\n    const [loadSts, setLoadSts] = useState('loading...')\r\n\r\n    useEffect(() => {\r\n        const url = '/api/user/' + id\r\n        fetch( url, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({ token: user.token })\r\n        }).then(res => res.json())\r\n        .then(data => {\r\n            setProfile(data)\r\n            if(data.fbId === user.fbId){\r\n                setLoadSts('Can\\'t ask yourself!')\r\n            }else if(data.fbId !== user.fbId){\r\n                setLoadSts('')\r\n            }\r\n        }).catch(e => {setLoadSts('user not found')})\r\n    }, [id])\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            setSuccessMessage('')\r\n            setErrorMessage('')\r\n        },2000)\r\n    },[successMessage, errorMessage])\r\n\r\n    const QuestionSubmit = (e) => {\r\n        e.preventDefault()\r\n        if(e.target.elements.question.value.length < 10){\r\n            setSuccessMessage('')\r\n            return setErrorMessage('at least 10 characters')\r\n        }\r\n        const QuestionAsked = {\r\n            question: e.target.elements.question.value,\r\n            askedBy: user.fbId,\r\n            askedAs: e.target.elements.askedAs.checked,\r\n            isPrivate: e.target.elements.isPrivate.checked,\r\n            askedTo: profile.fbId,\r\n            token: user.token\r\n        }\r\n        \r\n        fetch('/api/ask', {\r\n            method: 'post',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(QuestionAsked)\r\n        }).then((response) => response.json()).then((data) => {\r\n            if(data.Success){\r\n                setSuccessMessage(data.Success);\r\n                setErrorMessage('')\r\n            }else{\r\n                setSuccessMessage('')\r\n                setErrorMessage(data.Error)\r\n            }\r\n        }).catch(e => {\r\n            setSuccessMessage('')\r\n            setErrorMessage('unknown Error')\r\n        })\r\n        \r\n        setQuestion('')\r\n        e.target.elements.isPrivate.checked = false\r\n        e.target.elements.askedAs.checked = false\r\n    }\r\n\r\n    const chkQLength = (e) => {\r\n        e.target.value.length <= 160 && setQuestion(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                !loadSts &&\r\n                <div className=\"AskProfileBadge\">\r\n                    <div className=\"profileBadge\">\r\n                        <img className=\"AskPageImage\" src={profile.avatar} height=\"65px\" width=\"65px\" alt={profile.name}/>\r\n                        <p className=\"askProfileName\">Ask {profile.name}</p>\r\n                    </div>\r\n                    {\r\n                        successMessage && <div className=\"successMessage\">{successMessage}</div>\r\n                    }\r\n                    {\r\n                        errorMessage && <div className=\"errorMessage\">{errorMessage}</div>\r\n                    }\r\n                    <div className=\"AskBox\">\r\n                        <div className=\"chatCount\">\r\n                            <p className=\"TextCount\">{Question.length}/160</p>\r\n                        </div>\r\n                        <form onSubmit={QuestionSubmit}>\r\n                            <textarea placeholder=\"type your answer here...\" name=\"question\" value={Question} onChange={chkQLength} className=\"AskBoxInputText\"/>\r\n                            <div className=\"AskSettingPannel\">\r\n                                <div className=\"askOptions\">\r\n                                    <div>\r\n                                        <input name=\"askedAs\" type=\"checkbox\" id=\"askedAs\"/>\r\n                                        <label htmlFor=\"askedAs\"> Ask as Anonymous</label>\r\n                                    </div>\r\n                                    <div>\r\n                                        <input name=\"isPrivate\" type=\"checkbox\" id=\"isPrivate\"/>\r\n                                        <label htmlFor=\"isPrivate\"> Ask in private</label> \r\n                                    </div>\r\n                                </div>\r\n                                <button className=\"bigButton\">Ask {profile.name.split(' ')[0]}</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            }\r\n            {\r\n                loadSts &&\r\n                <div className=\"ProfileDenyMessage\">\r\n                    <p>{loadSts}</p>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Ask","import React, { useContext } from 'react'\r\nimport userContext from '../contexts/user-context'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Profile = () => {\r\n    const {user} = useContext(userContext)\r\n\r\n    return (\r\n        <div className=\"Profile-Desc\">\r\n            <div className=\"ProfHolder\">\r\n                <img className=\"Pro-Desc-Img\" alt=\"User-Image\" src={user.avatar} height=\"50px\" width=\"50px\" />\r\n                <p>{user.name}</p>\r\n            </div>\r\n            <div className=\"buttonHolder\">\r\n                <Link to={`/ask/${user.fbId}`} className=\"ButtonImage\"><img className=\"iconImageButton\" src=\"/icons/share.png\"/></Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile","import React, { useEffect, useState, useContext } from 'react'\r\nimport Profile from './subComponents/profile'\r\nimport userContext from './contexts/user-context'\r\nimport Question from './subComponents/qusetions'\r\n\r\nconst Requests = () => {\r\n    const {user} = useContext(userContext)\r\n    const [questions, setQuestions] = useState(null)\r\n    const [skip, setSkip] = useState(0)\r\n    const [loadSts, setLoadSts] = useState('loading...')\r\n\r\n    useEffect(() => {\r\n        const qurl = '/api/questions/requests?skip=' + skip\r\n        fetch( qurl, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({ fbId: user.fbId, token: user.token })\r\n        }).then(res => res.json())\r\n        .then(data => {\r\n            setQuestions(data)\r\n            if(data.length === 0){\r\n                setLoadSts('Nothing to show!')\r\n            }else{\r\n                setLoadSts(null)\r\n            }\r\n        }).catch(e => setLoadSts('Error Loading data!'))\r\n    }, [skip])\r\n\r\n    return (\r\n        <div>\r\n            <Profile />\r\n            <div className=\"sectionTitle\">Inbox</div>\r\n            {!loadSts &&\r\n            <div>\r\n                {(questions !== null) && questions.map((q) => <Question key={q._id} data={q} />)}\r\n            </div>}\r\n            {!loadSts &&\r\n            <div className=\"paginationWrapper\">\r\n                { skip > 0 && <button className=\"paginationButton\" onClick={() => setSkip(skip-1)}>previous</button>}\r\n                {(questions !== null && questions.length === 10) && <button className=\"paginationButton\" onClick={() => setSkip(skip+1)}>Next</button>}\r\n            </div>}\r\n            {loadSts &&\r\n            <div className=\"ProfileDenyMessage\">\r\n                <p>{loadSts}</p>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Requests","import React, { useEffect, useState, useContext } from 'react'\r\nimport Profile from './subComponents/profile'\r\nimport userContext from './contexts/user-context'\r\nimport Question from './subComponents/qusetions'\r\n\r\nconst Queries = () => {\r\n    const {user} = useContext(userContext)\r\n    const [questions, setQuestions] = useState(null)\r\n    const [skip, setSkip] = useState(0)\r\n    const [loadSts, setLoadSts] = useState('loading...')\r\n\r\n    useEffect(() => {\r\n        const qurl = '/api/questions/queries?skip=' + skip\r\n        fetch( qurl, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({ fbId: user.fbId, token: user.token })\r\n        }).then(res => res.json())\r\n        .then(data => {\r\n            setQuestions(data)\r\n            if(data.length === 0){\r\n                setLoadSts('Nothing to show!')\r\n            }else{\r\n                setLoadSts(null)\r\n            }\r\n        }).catch(e => setLoadSts('Error loading data!'))\r\n    }, [skip])\r\n\r\n    return (\r\n        <div>\r\n            <Profile />\r\n            <div className=\"sectionTitle\">Outbox</div>\r\n            {!loadSts &&\r\n            <div>\r\n                {(questions !== null) && questions.map((q) => <Question key={q._id} data={q} />)}\r\n            </div>}\r\n            {!loadSts &&\r\n            <div className=\"paginationWrapper\">\r\n                { skip > 0 && <button className=\"paginationButton\" onClick={() => setSkip(skip-1)}>previous</button>}\r\n                {(questions !== null && questions.length === 10) && <button className=\"paginationButton\" onClick={() => setSkip(skip+1)}>Next</button>}\r\n            </div>}\r\n            {loadSts &&\r\n            <div className=\"ProfileDenyMessage\">\r\n                <p>{loadSts}</p>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Queries","import React, { useEffect, useContext, useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport userContext from './contexts/user-context'\r\nimport { Link } from 'react-router-dom'\r\nimport Modal from 'react-modal'\r\n\r\nconst Question = () => {\r\n\r\n    const {user} = useContext(userContext)\r\n    const [question, setQuestion] = useState(null)\r\n    const { id } = useParams()\r\n    const [loadSts, setLoadSts] = useState('loading...')\r\n    const [action, setAction] = useState(false)\r\n    const [ans, setAns] = useState('')\r\n    const [ansSubmit, setAnsSubmit] = useState (null)\r\n    const [modal,setModal] = useState(false)\r\n    const [likeSubmit, setLikeSubmit] = useState(null)\r\n    const [comment, setComment] = useState('')\r\n    const [comSubmit, setComSubmit] = useState(null)\r\n\r\n    useEffect(() => {\r\n        setComment('')\r\n        const qurl = '/api/questions/one/' + id\r\n        console.log(qurl)\r\n        fetch( qurl, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'token': user.token\r\n            }\r\n        }).then(res => res.json())\r\n        .then(data => {\r\n            setQuestion(data)\r\n            console.log(data)\r\n            if(data._id){\r\n                setLoadSts(null)\r\n            }else{\r\n                setLoadSts('Nothing found!')\r\n            }\r\n        }).catch(e => setLoadSts('Data not Found!'))\r\n    },[ansSubmit, likeSubmit, comSubmit])\r\n\r\n    const populateAnswer = (e) => {\r\n        e.target.value.length < 161 && setAns(e.target.value)\r\n    }\r\n\r\n    const handleDelete = () => {\r\n        setModal(true)\r\n    }\r\n\r\n    const deleteQuestion = () => {\r\n        const data = {\r\n            isHidden: true,\r\n            token : user.token\r\n        }\r\n        const url = '/api/questions/one/delete/' + id\r\n        fetch( url, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        }).then(feedback => feedback.json())\r\n        .then(data => {\r\n            if(data.Message === 'success'){\r\n                setAnsSubmit('Deleted!')\r\n            }\r\n        }).catch(e => setAnsSubmit('Cannot delete!'))\r\n        setModal(false)\r\n    }\r\n\r\n    const answerSubmit = (e) => {\r\n        e.preventDefault()\r\n        const data = {\r\n            answer: ans,\r\n            isPrivated: e.target.elements.isPrivated.checked,\r\n            token : user.token\r\n        }\r\n        const url = '/api/questions/one/' + id\r\n        fetch( url, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        }).then(feedback => feedback.json())\r\n        .then(data => {\r\n            if(data.Message === 'success'){\r\n                setAnsSubmit('success')\r\n            }\r\n        }).catch(e => setAnsSubmit('Cannot submit!'))\r\n    }\r\n\r\n    const likeSubmitHandler = () => {\r\n        const data = {token: user.token}\r\n        const url = '/api/questions/likes/' + id\r\n        fetch( url, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        }).then(feedback => feedback.json())\r\n        .then(data => {\r\n            if(data.Message === 'success'){\r\n                setLikeSubmit('success')\r\n            }\r\n        }).catch(e => setLikeSubmit('cannot like'))\r\n    }\r\n\r\n    const commentSubmitHandler = (e) => {\r\n        e.preventDefault()\r\n        if(comment.length > 4){\r\n            const data = {\r\n                token: user.token, \r\n                comment: comment,\r\n                name: user.name,\r\n                avatar: user.avatar\r\n            }\r\n            const url = '/api/questions/comments/' + id\r\n            fetch( url, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(data)\r\n            }).then(feedback => feedback.json())\r\n            .then(data => {\r\n                if(!!data.message){\r\n                    setComSubmit(data.message)\r\n                }\r\n            }).catch(e => setComSubmit('cannot comment'))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"QMainWrapper\">\r\n\r\n            <Modal \r\n                isOpen = {modal}\r\n                className=\"UserModal\"\r\n                overlayClassName=\"UserModalOverlay\"\r\n                ariaHideApp={false}\r\n            >\r\n                <div>\r\n                    <p className=\"deleteMessage\">Delete this question from {question !== null && (question.askedByName ? question.askedByName : 'Anonymous')}?</p>\r\n                    <div className=\"deleteModalButtonWrapper\">\r\n                        <button className=\"deleteModalButton\" onClick={deleteQuestion}>Yes</button>\r\n                        <button className=\"deleteModalButton\" onClick={() => setModal(false)}>No</button>\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n\r\n\r\n            {!loadSts &&\r\n            <div className=\"QuestionWrapper\">\r\n\r\n                {(question.answered && question.askedToId === user.fbId) &&\r\n                <div className=\"QuestionDeleteShare\">\r\n                    <button onClick={handleDelete} className=\"deleteModalButton\">Delete</button>\r\n                </div>\r\n                }\r\n\r\n                <div className=\"AskerPanel\">\r\n                    <Link to={() => question.askedById ? '/user/' + question.askedById : undefined}><img className=\"profileBadgeImage\" height=\"50px\" width=\"50px\" src={question.askedByAvatar ? question.askedByAvatar : '/icons/anonymous.png'} /></Link>\r\n                    <div className=\"AskerPanelQuestionBox\">\r\n                        <p className=\"AskerPanelQuestion\">\r\n                            {question.askedByName ? <span className=\"nameColor\">{question.askedByName}</span> : <span className=\"nameColor\">Anonymous</span>} {question.question}\r\n                        </p>\r\n                        <p className=\"AskerPanelTime\">\r\n                            {new Date(question.createdAt).toLocaleDateString('en-GB', {day: 'numeric', month: 'short', year: 'numeric' }).replace(/, /g, '-')} &nbsp;\r\n                            {new Date(question.createdAt).toLocaleString('en-US', { hour: 'numeric', minute: 'numeric', hour12: true })} &nbsp;\r\n                            {question.isPrivate ? 'Private' : 'Public'}\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n\r\n                {(!question.answered && question.askedToId === user.fbId && !action) &&\r\n                <div className=\"UnAnsweredButtonGroup\">\r\n                    <button onClick={() => setAction(true)} className=\"UnAnsweredGroupButton\">Answer</button>\r\n                    <button onClick={handleDelete} className=\"UnAnsweredGroupButton\">Delete</button>\r\n                </div>\r\n                }\r\n\r\n                {(!question.answered && question.askedToId === user.fbId && action) &&\r\n\r\n                <div className=\"AnswerBoxWrapper\">\r\n                    {ansSubmit && <p className=\"answerSubmitMessage\">{ansSubmit}</p>}\r\n                    <p className=\"answerCount\">{ans.length}/160</p>\r\n                    <form onSubmit={answerSubmit} className=\"answerFormWrapper\">\r\n                        <textarea value={ans} onChange={populateAnswer} placeholder=\"type your question here...\" name=\"question\" className=\"answerBox\"/>\r\n                        <div className=\"AnswerSubmitPanel\">\r\n                            <div>\r\n                                <input name=\"isPrivated\" type=\"checkbox\" id=\"isPrivated\"/>\r\n                                <label htmlFor=\"isPrivated\"> Private answer</label>\r\n                            </div>\r\n                            <button className=\"bigButton\">Answer</button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                }\r\n\r\n                {question.answered &&\r\n                <div>\r\n                    <div className=\"AnswerPanel\">\r\n                        <div className=\"AnswerPanelQuestionBox\">\r\n                            <p className=\"AskerPanelQuestion\">\r\n                                {<span className=\"nameColor\">{question.askedToName}</span>} {question.answer}\r\n                            </p>\r\n                            <p className=\"AskerPanelTime\">\r\n                                {new Date(question.answeredAt).toLocaleDateString('en-GB', {day: 'numeric', month: 'short', year: 'numeric' }).replace(/, /g, '-')} &nbsp;\r\n                                {new Date(question.answeredAt).toLocaleString('en-US', { hour: 'numeric', minute: 'numeric', hour12: true })} &nbsp;\r\n                                {question.isPrivate ? 'Private' : 'Public'}\r\n                            </p>\r\n                        </div>\r\n                        <Link to={() => '/user/' + question.askedToId}><img className=\"profileBadgeImage\" height=\"50px\" width=\"50px\" src={question.askedToAvatar} /></Link>\r\n                    </div>\r\n                </div>\r\n                }\r\n\r\n                {question.answered && \r\n                <div className=\"likeShareCommentSection\">\r\n                    <div className=\"likeShareSection\">\r\n                        {question.likes.includes(user.fbId) ? <button onClick={likeSubmitHandler} className=\"likeSharePanelButton\">Liked ({question.likes.length})</button> : <button onClick={likeSubmitHandler} className=\"likeButtonUncheck\">Like ({question.likes.length})</button>}\r\n                        <button className=\"likeSharePanelButton\">Share</button>\r\n                    </div>\r\n                    <div className=\"commentSection\">\r\n                        <div className=\"CommentTitle\">Comments ({question.comments.length})</div>\r\n                        <div className=\"commentHolder\">\r\n                            {\r\n                                question.comments.map((comment, index) => <Comment key={index} comment={comment} />)\r\n                            }\r\n                        </div>\r\n                        <div className=\"commentInputSection\">\r\n                            <form className=\"commentForm\" onSubmit={commentSubmitHandler}>\r\n                                <textarea placeholder=\"write here...\" value={comment} onChange={(e) => (e.target.value.length < 161) && setComment(e.target.value)} className=\"commentInputBox\"/>\r\n                                <div className=\"ButtonHolder\">\r\n                                    <div className=\"commentCounterWrapper\">\r\n                                        <p className=\"commentCounter\">{comment.length}/160</p>\r\n                                    </div>\r\n                                    <button disabled={comment.length > 4 ? false : true} className={comment.length > 4 ? \"commentSubmitButton\" : \"commentSubmitButtonDeactive\"}>Comment</button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                }\r\n            </div>\r\n            }\r\n            {loadSts &&\r\n            <div className=\"ProfileDenyMessage\">\r\n                <p>{loadSts}</p>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Comment = ({comment}) => {\r\n    return (\r\n        <div className=\"commentShowWrapper\">\r\n            <div className=\"commentProfileWrapper\">\r\n                <Link to={'/user/' + comment.fbId}><img className=\"commentProfilePic\" src={comment.avatar} height=\"35px\" width=\"35px\"/></Link>\r\n            </div>\r\n            <div className=\"commentTextWrapper\">\r\n                <p><span className=\"commentProfileName\">{comment.name}</span> <span className=\"commentCommentText\">{comment.comment}</span></p>\r\n                <p className=\"commentDateTime\">\r\n                    {new Date(comment.time).toLocaleDateString('en-GB', {day: 'numeric', month: 'short', year: 'numeric' }).replace(/, /g, '-')} &nbsp;\r\n                    {new Date(comment.time).toLocaleString('en-US', { hour: 'numeric', minute: 'numeric', hour12: true })}\r\n                </p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Question","import React, { useEffect, useState, useContext } from 'react'\r\nimport Profile from './subComponents/profile'\r\nimport userContext from './contexts/user-context'\r\nimport Question from './subComponents/qusetions'\r\n\r\nconst Private = () => {\r\n    const {user} = useContext(userContext)\r\n    const [questions, setQuestions] = useState(null)\r\n    const [skip, setSkip] = useState(0)\r\n    const [loadSts, setLoadSts] = useState('loading...')\r\n\r\n    useEffect(() => {\r\n        const qurl = '/api/questions/private?skip=' + skip\r\n        fetch( qurl, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({ fbId: user.fbId, token: user.token })\r\n        }).then(res => res.json())\r\n        .then(data => {\r\n            setQuestions(data)\r\n            if(data.length === 0){\r\n                setLoadSts('Nothing to show!')\r\n            }else{\r\n                setLoadSts(null)\r\n            }\r\n        }).catch(e => setLoadSts('Error Loading data!'))\r\n    }, [skip])\r\n\r\n    return (\r\n        <div>\r\n            <Profile />\r\n            <div className=\"sectionTitle\">Private</div>\r\n            {!loadSts &&\r\n            <div>\r\n                {(questions !== null) && questions.map((q) => <Question key={q._id} data={q} />)}\r\n            </div>}\r\n            {!loadSts &&\r\n            <div className=\"paginationWrapper\">\r\n                { skip > 0 && <button className=\"paginationButton\" onClick={() => setSkip(skip-1)}>previous</button>}\r\n                {(questions !== null && questions.length === 10) && <button className=\"paginationButton\" onClick={() => setSkip(skip+1)}>Next</button>}\r\n            </div>}\r\n            {loadSts &&\r\n            <div className=\"ProfileDenyMessage\">\r\n                <p>{loadSts}</p>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Private","import React, { useReducer, useEffect } from 'react'\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\r\nimport UserContext from '../contexts/user-context'\r\nimport userReducer from '../reducers/userReducer'\r\nimport FbAuth from '../fbAuth/FBAuth'\r\nimport Home from '../Home'\r\nimport Header from '../Header'\r\nimport User from '../User'\r\nimport Ask from '../Ask'\r\nimport Requests from '../Requests'\r\nimport Queries from '../Queries'\r\nimport Question from '../Question'\r\nimport Private from '../Private'\r\n\r\nconst App = () => {\r\n    const [user, dispatch] = useReducer(userReducer,{fbId: '', name: '', email: '', avatar: '', token: ''})\r\n\r\n    useEffect(() => {\r\n        try{\r\n            const userData = JSON.parse(localStorage.getItem('askbook'))\r\n            fetch(`https://graph.facebook.com/v2.8/me?access_token=${userData.token}`).then((response) => response.json())\r\n                .then(data => {\r\n                    if(data.id === userData.fbId){\r\n                        dispatch({\r\n                            type: 'POPULATE_USER',\r\n                            user: userData\r\n                        })\r\n                    }\r\n                })\r\n        }catch(e){}\r\n    },[])\r\n\r\n    if(user.token){\r\n        localStorage.setItem('askbook', JSON.stringify(user))\r\n        return (\r\n            <UserContext.Provider value={{user,dispatch}}>\r\n                    <BrowserRouter>\r\n                        <Header />\r\n                        <div className='container'>\r\n                            <Switch>\r\n                                <Route path='/' component={Home} exact />\r\n                                <Route path='/user/:id' component={User} />\r\n                                <Route path='/ask/:id' component={Ask} />\r\n                                <Route path=\"/requests\" component={Requests} />\r\n                                <Route path='/queries' component={Queries} />\r\n                                <Route path='/question/:id' component={Question} />\r\n                                <Route path='/private' component={Private} />\r\n                            </Switch>\r\n                        </div>\r\n                    </BrowserRouter>\r\n            </UserContext.Provider>\r\n        )\r\n    }else{\r\n        return (\r\n            <UserContext.Provider value={{user,dispatch}}>\r\n                <FbAuth />\r\n            </UserContext.Provider>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport './app.css'\nimport App from './components/appComponent/App'\n\nReactDOM.render(<App />,document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}